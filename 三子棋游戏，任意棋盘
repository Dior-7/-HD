#define  _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "game.h"
void menu() 
{
	printf("*********************\n"
		   "**paly 1or exit 0:>**\n"
		   "*********************\n");
}

void game()
{
	//真正游戏的主题，由此进行封装；
	char board[ROW][COL] = { 0 };
	//初始化棋盘数组
	initboard(board, ROW, COL);
    displayboard(board,ROW,COL);
	//玩游戏
	while (1)
	{
		//玩家下棋
		playermove(board,ROW,COL);
	     ret = iswin(board,ROW,COL);
		if (ret != "c");
		{
			break;
		}
		//电脑下棋
		commove(board, ROW, COL);
		ret=iswin();
		if (ret != "c");
		{
			break;
		}
		if (ret == "*")
		{
			printf("玩家赢");
			break;
		}
		if (ret == "#")
		{
			printf("电脑赢");
			break;
		}
	}


}
void test()
{
	srand((unsigned int)time(NULL));
	int a = 0;
	do
	{
		menu();
		printf("请选择>:");
		scanf("%d", &a);
		switch (a)
		{
		case 1:
			game();
			break;
		case 0:
			printf("exit");
			break;
		default:
			printf("输入有误，请重新输入");
			break;
		}
	} while (a);
}


int main()
{
	
	test();


	return 0;
}


、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、

#define  _CRT_SECURE_NO_WARNINGS
#include"game.h"
#include <stdio.h>
void initboard(char board[ROW][COL], int row, int col)
{
	int i = 0; int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			board[i][j] = "  ";
		}

	}
}
void displayboard(char board[ROW][COL], int row, int col)
{
	int i = 0, j = 0;
	for (i = 0; i < row; i++)
	{
		
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);
			if (j<col-1)
			printf("|");
			printf("\n");
		}
		if (i < row - 1)
		{
			for (j = 0; j < col; j++)
			{
				printf("___");
				if (j < col - 1)
					printf("|");
				printf("\n");

			}

		}

	}
}
void playermove(char board[ROW][COL], int row, int col)
{
	int x = 0, y = 0;
	printf("请输入:>\n");
	scanf("%d%d", &x, &y);
	while (1)
	{
		if (1<=x && x <= row, 1<=y && y <= col)
		{
			printf("请输入要下的目标:>\n");
			if (board[x - 1][y - 1]==" ")
			{
				board[x - 1][y - 1] = "*";
				break;

			}
			else
			{
				printf("该位置被占用");

			}

		}
		else
		{
			printf("输入非法，请重新输入\n");
		}
	}



}
void commove(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("电脑走:>\n");
	x = rand() % row;
	y = rand() % col;
	while (1)
	{
		if (board[x][y] == " ")
		{
			board[x][y] = "#";
			break;
		}
		else
		{
			printf("该位置被占用\n");

		}
	}


}
int isfull(char board[ROW][COL],int row,int col)
{
	int i = 0, j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			if (board[i][j] == " ")
			{
				return 0;
			}
		}
	}
	return 1;
}

char iswin(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] || board[i][1] != " ")
		{
			return board[i][1];
		}
	}
	for (i = 0; i < col; i++)
	{
		if (board[0][i] == board[1][i] && board[1][i] == board[2][i] || board[1][i] != " ")
		{
			return board[1][i];
		}
	}
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[1][1] != " ")
	{
		return board[1][1];
	}
	if (board[2][0] == board[1][1] && board[1][1] == board[2][2] && board[1][1] != " ")
	{
		return board[2][0];
	}
	if (1 == isfull(board,ROW,COL) )
	{
		return 'q';
	}
	else
		return 'c';
}

、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、

#pragma once
#define ROW 3
#define COL 3
void initboard(char board[ROW][COL], int row, int col);
void  displayboard(char board[ROW][COL], int row, int col);
void playermove(char board[ROW][COL], int row, int col);
void commove(char board[ROW][COL], int row, int col);
char iswin(char board[ROW][COL], int row, int col);

