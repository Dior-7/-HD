#define _CRT_SECURE_NO_WARNINGS1
#include <stdio.h>
//struct S
//{
//	int _a : 2;//表示分给a两个比特位，它只需要两个比特位
//	int _b : 5;
//	int _c : 10;
//	int _d : 30;
//};
//
struct S
{
	char a : 3;
	char b : 4;
	char c : 5;
	char d : 4;

};
enum Sex
{
	male,
    female,
    secret,
};
union un
{
	char i;
	int c;

};
//int main()
//{
//	//int a = 0, b = 0;
//	
//	//scanf("%d%d", &a, &b);
//	//int sum = a + b;
//	////printf("sum = %d", sum);
//	//struct S s;
//	//s.a = 10;
//	//s.b = 20;
//	//s.c = 3;
//	//s.d = 4;
//	////printf("%d", sizeof(s));//只占用8个字节，位段，二进制位段
//	//enum Sex x;
//	//printf("%d %d %d ", male,female,secret);
//	union un s;
//	printf("%p\n", &s);
//	printf("%p\n", &s.c);
//	printf("%p\n", &s.i);
//
//
//	return 0;
//}
//
//int main()
//{
//
//	/*int a = 1;
//	if (1 == *(char*)&a)
//	{
//		printf("小端");
//
//	}
//	else
//	{
//		printf("大端");
//
//	}*/
//	//int a = 0x11223344;//讨论一个数据放在内存中存在的字节顺序，即大小端字节序问题
//	////低字节放在高地址  ，高字节放在低地址处，大端字节序存储模式
//	////低字节内容放在低地址处，高字节内容放在高地址处，小端字节序存储模式
//	
//
//
//	return 0;
//}
int check_sys()
{
	union un
	{
		char c;
		int i;
	}s;
	  s.i = 1;
	return s.c;


}
int main()
{
	int ret=check_sys();
	if (ret == 1)
	{
		printf("小端");
	}
	else
	{
		printf("大端");
	}

	return 0;
}
